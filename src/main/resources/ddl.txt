-- DROP TABLES
DROP TABLE IF EXISTS `comment`;
DROP TABLE IF EXISTS `alarm`;
DROP TABLE IF EXISTS `qna_post`;
DROP TABLE IF EXISTS `payment_detail`;
DROP TABLE IF EXISTS `discount`;
DROP TABLE IF EXISTS `payment`;
DROP TABLE IF EXISTS `request_list`;
DROP TABLE IF EXISTS `info_column`;
DROP TABLE IF EXISTS `info_db`;
DROP TABLE IF EXISTS `user`;
DROP TABLE IF EXISTS `company`;
DROP TABLE IF EXISTS `role`;
DROP TABLE IF EXISTS `membership`;
DROP TABLE IF EXISTS `payment_category`;
DROP TABLE IF EXISTS `analysis`;


-- CREATE TABLES
CREATE TABLE `role` (
                        `role_no` TINYINT PRIMARY KEY,
                        `name` ENUM('ADMIN', 'CLIENT_ADMIN', 'CLIENT_USER', 'USER') NOT NULL DEFAULT 'USER'
);

CREATE TABLE `membership` (
                              `membership_no` TINYINT AUTO_INCREMENT PRIMARY KEY,
                              `name` VARCHAR(50) NOT NULL,
                              `description` TEXT NOT NULL,
                              `status` BOOLEAN NOT NULL DEFAULT FALSE,
                              `price` INT UNSIGNED NOT NULL,
                              `duration` TINYINT NOT NULL,
                              `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                              `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `payment_category` (
                                    `payment_category_no` TINYINT AUTO_INCREMENT PRIMARY KEY,
                                    `name` VARCHAR(50) NOT NULL
);

CREATE TABLE `analysis` (
                            `analysis_no` TINYINT AUTO_INCREMENT PRIMARY KEY,
                            `name` VARCHAR(50),
                            `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                            `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE `company` (
                           `company_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                           `membership_no` TINYINT NOT NULL,
                           `name` VARCHAR(100) NOT NULL,
                           `email` VARCHAR(50) NOT NULL,
                           `phone` VARCHAR(20) NOT NULL,
                           `registration_number` VARCHAR(20) NOT NULL,
                           `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                           `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                           `is_deleted` BOOLEAN NOT NULL DEFAULT FALSE,
                           `is_subscribed` BOOLEAN NOT NULL DEFAULT FALSE,
                           `membership_started_at` DATETIME,
                           `membership_expired_at` DATETIME,
                           FOREIGN KEY (`membership_no`) REFERENCES `membership` (`membership_no`)
);

CREATE TABLE `user` (
                        `user_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                        `username` VARCHAR(50) NOT NULL,
                        `role_no` TINYINT NOT NULL,
                        `company_no` BIGINT NOT NULL,
                        `password` VARCHAR(60) NOT NULL,
                        `logined_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                        `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                        `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                        `is_deleted` BOOLEAN NOT NULL DEFAULT FALSE,
                        FOREIGN KEY (`role_no`) REFERENCES `role` (`role_no`),
                        FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`)
);

CREATE TABLE `qna_post` (
                            `post_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                            `user_no` BIGINT NOT NULL,
                            `title` VARCHAR(100) NOT NULL,
                            `content` TEXT NOT NULL,
                            `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                            `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                            FOREIGN KEY (`user_no`) REFERENCES `user` (`user_no`)
);

CREATE TABLE `comment` (
                           `comment_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                           `post_no` BIGINT NOT NULL,
                           `user_no` BIGINT NOT NULL,
                           `content` TEXT NOT NULL,
                           `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                           `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                           FOREIGN KEY (`post_no`) REFERENCES `qna_post` (`post_no`),
                           FOREIGN KEY (`user_no`) REFERENCES `user` (`user_no`)
);

CREATE TABLE `payment` (
                           `payment_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                           `company_no` BIGINT NOT NULL,
                           `payment_category_no` TINYINT NOT NULL,
                           `detail` TEXT NOT NULL,
                           `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                           `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                           FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`),
                           FOREIGN KEY (`payment_category_no`) REFERENCES `payment_category` (`payment_category_no`)
);

CREATE TABLE `discount` (
                            `discount_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                            `company_no` BIGINT NOT NULL,
                            `state` BOOLEAN NOT NULL DEFAULT FALSE,
                            `started_at` DATETIME,
                            `expired_at` DATETIME,
                            `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                            `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                            FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`)
);

CREATE TABLE `payment_detail` (
                                  `payment_detail_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                                  `membership_no` TINYINT NOT NULL,
                                  `payment_no` BIGINT NOT NULL,
                                  `company_no` BIGINT NOT NULL,
                                  `discount_no` BIGINT NOT NULL,
                                  `price` INT UNSIGNED NOT NULL,
                                  `status` ENUM('SUCCESS','FAIL','PENDING') NOT NULL DEFAULT 'PENDING',
                                  `paid_at` DATETIME,
                                  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                                  `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                                  FOREIGN KEY (`membership_no`) REFERENCES `membership` (`membership_no`),
                                  FOREIGN KEY (`payment_no`) REFERENCES `payment` (`payment_no`),
                                  FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`),
                                  FOREIGN KEY (`discount_no`) REFERENCES `discount` (`discount_no`)
);

CREATE TABLE `request_list` (
                                `request_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                                `analysis_no` TINYINT NOT NULL,
                                `company_no` BIGINT NOT NULL,
                                `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                                `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                                FOREIGN KEY (`analysis_no`) REFERENCES `analysis` (`analysis_no`),
                                FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`)
);

CREATE TABLE `alarm` (
                         `alarm_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                         `user_no` BIGINT NOT NULL,
                         `content` TEXT NOT NULL,
                         `is_read` BOOLEAN NOT NULL DEFAULT FALSE,
                         `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                         FOREIGN KEY (`user_no`) REFERENCES `user` (`user_no`)
);

CREATE TABLE `info_db` (
                           `info_db_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                           `company_no` BIGINT NOT NULL,
                           `name` VARCHAR(50) NOT NULL,
                           `host` VARCHAR(100),
                           `user` VARCHAR(50),
                           `password` VARCHAR(100),
                           `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                           `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                           FOREIGN KEY (`company_no`) REFERENCES `company` (`company_no`)
);

CREATE TABLE `info_column` (
                               `info_column_no` BIGINT AUTO_INCREMENT PRIMARY KEY,
                               `info_db_no` BIGINT NOT NULL,
                               `analysis_column` VARCHAR(50) NOT NULL,
                               `origin_column` VARCHAR(50) NOT NULL,
                               `note` TEXT,
                               `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
                               `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
                               FOREIGN KEY (`info_db_no`) REFERENCES `info_db` (`info_db_no`)
);